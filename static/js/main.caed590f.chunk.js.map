{"version":3,"sources":["components/phoneBook/contactList/ContactList.module.css","components/phoneBook/PhoneBook.module.css","components/phoneBook/insert/Insert.module.css","components/phoneBook/notification/Notification.module.css","components/phoneBook/contactFilter/ContactFilter.module.css","components/redux/tasks/contactsActions.js","components/phoneBook/insert/Insert.js","components/phoneBook/notification/Notofication.js","components/phoneBook/contactForm/ContactForm.js","components/phoneBook/contactList/ContactList.js","components/phoneBook/contactFilter/ContactFilter.js","components/phoneBook/PhoneBook.js","components/App.js","components/redux/tasks/contactsReducer.js","components/redux/store.js","index.js","components/phoneBook/contactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","deleteContact","onHandleFilter","localStorage","Insert","className","Styles","NotificationWrapper","Notification","ContactForm","state","newContact","showAlert","showEmpty","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","contacts","some","setTimeout","getItem","this","JSON","parse","prevProps","setItem","stringify","onSubmit","s","form","label","input","type","onChange","button","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","contactsActions","connect","contactList","normalizeFilter","filter","toLowerCase","includes","dispatch","onHandleDelete","dataset","TransitionGroup","component","list","map","listItem","data-id","onClick","PhoneBook","appear","title","length","App","createReducer","action","_","combineReducers","store","configureStore","reducer","contactsReducers","ReactDOM","render","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,kC,mBCAlSD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,aAAe,gCAAgC,MAAQ,yBAAyB,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,WAAa,gC,mBCA/PD,EAAOC,QAAU,CAAC,oBAAsB,oCAAoC,OAAS,uBAAuB,aAAe,6BAA6B,KAAO,qBAAqB,WAAa,6B,mBCAjMD,EAAOC,QAAU,CAAC,oBAAsB,0CAA0C,OAAS,6BAA6B,aAAe,mCAAmC,KAAO,2BAA2B,WAAa,mC,mBCAzND,EAAOC,QAAU,CAAC,MAAQ,+B,0MCkBX,GACbC,WAjBiBC,YAAa,oBAAoB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACzEC,QAAS,CACPC,QAAS,CACPC,GAAIC,cACJL,OACAC,eAaJK,cARoBP,YAAa,mBASjCQ,eAPqBR,YAAa,yBAQlCS,aAPmBT,YAAa,0B,yBCLnBU,EARA,WACb,OACE,qBAAKC,UAAWC,IAAOC,oBAAvB,oC,iBCMWC,EARM,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACtB,OACE,qBAAKU,UAAWC,IAAOC,oBAAvB,mBACMZ,EADN,0BCGEc,E,4MACJC,MAAQ,CACNf,KAAM,GACNC,OAAQ,GACRe,WAAY,KACZC,WAAW,EACXC,WAAW,G,EAmBbC,aAAe,SAACC,GACd,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,SAAL,eAAiBtB,EAAOoB,EAAEC,OAAOE,S,EAGnCC,aAAe,SAACJ,GACdA,EAAEK,iBAEA,EAAKC,MAAMC,SAASC,MAAK,SAACzB,GAAD,OAAaA,EAAQH,OAAS,EAAKe,MAAMf,SAElE,EAAKsB,SAAS,CAAEN,WAAY,EAAKD,MAAMf,KAAMiB,WAAW,IACxDY,YAAW,WACT,EAAKP,SAAS,CAAEL,WAAW,MAC1B,OAC0B,KAApB,EAAKF,MAAMf,MAAsC,KAAvB,EAAKe,MAAMZ,SAC9C,EAAKmB,SAAS,CAAEJ,WAAW,IAC3BW,YAAW,WACT,EAAKP,SAAS,CAAEJ,WAAW,MAC1B,OAEH,EAAKQ,MAAM5B,WAAW,CACpBE,KAAM,EAAKe,MAAMf,KACjBC,OAAQ,EAAKc,MAAMd,SAGvB,EAAKqB,SAAS,CAAEtB,KAAM,GAAIC,OAAQ,M,kEAxClC,IAAM0B,EAAWnB,aAAasB,QAAQ,YAElCH,GACFI,KAAKL,MAAMlB,aAAawB,KAAKC,MAAMN,M,yCAIpBO,GAAY,IACrBP,EAAaI,KAAKL,MAAlBC,SAEJO,EAAUP,WAAaA,GACzBnB,aAAa2B,QAAQ,WAAYH,KAAKI,UAAUT,M,+BAgC1C,IAAD,EACsCI,KAAKhB,MAA1CC,EADD,EACCA,WAAYC,EADb,EACaA,UAAWC,EADxB,EACwBA,UAC/B,OACE,gCACE,uBAAMmB,SAAUN,KAAKP,aAAcd,UAAW4B,IAAEC,KAAhD,UACE,wBAAO7B,UAAW4B,IAAEE,MAApB,iBAEE,uBACE9B,UAAW4B,IAAEG,MACbzC,KAAK,OACL0C,KAAK,OACLnB,MAAOQ,KAAKhB,MAAMf,KAClB2C,SAAUZ,KAAKZ,kBAGnB,wBAAOT,UAAW4B,IAAEE,MAApB,mBAEE,uBACE9B,UAAW4B,IAAEG,MACbzC,KAAK,SACL0C,KAAK,MACLnB,MAAOQ,KAAKhB,MAAMd,OAClB0C,SAAUZ,KAAKZ,kBAGnB,wBAAQT,UAAW4B,IAAEM,OAAQF,KAAK,SAAlC,4BAIF,cAACG,EAAA,EAAD,CACEC,GAAI7B,EACJ8B,QAAS,IACTC,WAAYV,IACZW,eAAa,EAJf,SAME,cAAC,EAAD,CAAcjD,KAAMgB,MAEtB,cAAC6B,EAAA,EAAD,CACEC,GAAI5B,EACJ6B,QAAS,IACTC,WAAYV,IACZW,eAAa,EAJf,SAME,cAAC,EAAD,a,GAhGgBC,aAuGpBC,EAAqB,CACzBrD,WAAYsD,EAAgBtD,WAC5BU,aAAc4C,EAAgB5C,cASjB6C,eANS,SAACtC,GACvB,MAAO,CACLY,SAAUZ,EAAMY,SAAS2B,eAIWH,EAAzBE,CAA6CvC,G,yBChD7CuC,eAzBS,SAACtC,GAAW,IAAD,EACDA,EAAMY,SAA9B2B,EADyB,EACzBA,YACFC,EAF2B,EACZC,OACUC,cAM/B,MAAO,CACL9B,SALsB2B,EAAYE,QAAO,SAACrD,GAAD,OACzCA,EAAQH,KAAKyD,cAAcC,SAASH,UAQb,SAACI,GAC1B,MAAO,CACLrD,cAAe,SAACF,GACduD,EAASP,EAAgB9C,cAAcF,QAS9BiD,EAnEK,SAAC,GAAiC,IAA/B1B,EAA8B,EAA9BA,SAAUrB,EAAoB,EAApBA,cACzBsD,EAAiB,SAACxC,GACtB,IAAMhB,EAAKgB,EAAEC,OAAOwC,QAAQzD,GAC5BE,EAAcF,IAEhB,OACE,gCACE,0CACA,cAAC0D,EAAA,EAAD,CAAiBC,UAAU,KAAKrD,UAAW4B,IAAE0B,KAA7C,SACGrC,EAASsC,KAAI,SAAC9D,GACb,OACE,cAAC0C,EAAA,EAAD,CAAgCE,QAAS,IAAKC,WAAYV,IAA1D,SACE,qBAAqB5B,UAAW4B,IAAE4B,SAAlC,UACE,sBAAMxD,UAAW4B,IAAEtC,KAAnB,SAA0BG,EAAQH,OADpC,IACkD,IAChD,+BAAOG,EAAQF,SACf,wBACES,UAAW4B,IAAEM,OACbF,KAAK,SACLyB,UAAShE,EAAQC,GACjBgE,QAASR,EAJX,sBAHOzD,EAAQC,KADCD,EAAQC,e,iBCWlC+C,EAAqB,CACzB5C,eAAgB6C,EAAgB7C,gBAGnB8C,eARS,SAACtC,GAAD,MAAY,CAClCQ,MAAOR,EAAMY,SAAS6B,UAOgBL,EAAzBE,EA3BO,SAAC,GAA+B,IAA7B9B,EAA4B,EAA5BA,MAAOhB,EAAqB,EAArBA,eAC9B,OACE,gCACE,uDACA,uBACEG,UAAW4B,IAAEG,MACbC,KAAK,OACLnB,MAAOA,EACPoB,SAAU,SAACvB,GAAD,OAAOb,EAAea,EAAEC,OAAOE,gB,iBCH3C8C,E,uKAGF,OACE,gCACE,cAACxB,EAAA,EAAD,CAAeC,IAAI,EAAMwB,QAAQ,EAAMvB,QAAS,IAAKC,WAAYV,IAAjE,SACE,oBAAI5B,UAAW4B,IAAEiC,MAAjB,yBAEF,cAAC,EAAD,IAECxC,KAAKL,MAAMC,SAAS6C,OAAS,GAAK,cAAC,EAAD,IAEnC,cAAC,EAAD,W,GAZgBtB,aAwBTG,eANS,SAACtC,GACvB,MAAO,CACLY,SAAUZ,EAAMY,SAAS2B,eAIdD,CAAyBgB,GC3BzBI,EAJH,WACV,OAAO,cAAC,EAAD,K,uBCMHnB,EAAcoB,YAAc,IAAD,mBAC9BtB,EAAgBtD,YARA,SAACiB,EAAO4D,GACzB,MAAM,GAAN,mBAAW5D,GAAX,CAAkB4D,EAAOzE,QAAQC,aAMF,cAE9BiD,EAAgB9C,eANG,SAACS,EAAO4D,GAC5B,OAAO5D,EAAMyC,QAAO,SAACrD,GAAD,OAAaA,EAAQC,KAAOuE,EAAOzE,cAGxB,cAG9BkD,EAAgB5C,cAAe,SAACoE,EAAGD,GAAJ,OAAeA,EAAOzE,WAHvB,IAM3BsD,EAASkB,YAAc,GAAD,eACzBtB,EAAgB7C,gBAAiB,SAACqE,EAAGD,GAAJ,OAAeA,EAAOzE,YAG3C2E,cAAgB,CAC7BvB,cACAE,WCdasB,EANDC,YAAe,CAC3BC,QAAS,CACPrD,SAAUsD,KCEdC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,U,kBCV1BzF,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.caed590f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3b0A8\",\"listItem\":\"ContactList_listItem__3_Oh5\",\"button\":\"ContactList_button__3aXjS\",\"name\":\"ContactList_name__28MA_\",\"enter\":\"ContactList_enter__1pQb8\",\"enterActive\":\"ContactList_enterActive__2W-tO\",\"exit\":\"ContactList_exit__29jmt\",\"exitActive\":\"ContactList_exitActive__nLGlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PhoneBook_appear__1zHKA\",\"appearActive\":\"PhoneBook_appearActive__jkWne\",\"title\":\"PhoneBook_title__19tGE\",\"enter\":\"PhoneBook_enter__xZ0X9\",\"enterActive\":\"PhoneBook_enterActive__PSFik\",\"exit\":\"PhoneBook_exit__Oq7p5\",\"exitActive\":\"PhoneBook_exitActive__1GQzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Insert_NotificationWrapper__2RyE3\",\"appear\":\"Insert_appear__MW3QE\",\"appearActive\":\"Insert_appearActive__2Aw0j\",\"exit\":\"Insert_exit__3UI5V\",\"exitActive\":\"Insert_exitActive__373gb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Notification_NotificationWrapper__3kTGu\",\"appear\":\"Notification_appear__2IYfp\",\"appearActive\":\"Notification_appearActive__1syZK\",\"exit\":\"Notification_exit__3XvSG\",\"exitActive\":\"Notification_exitActive__28jd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__bfez0\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\"contacts/add.ADD\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contacts/remove\");\r\n\r\nconst onHandleFilter = createAction(\"contacts/handleFilter\");\r\nconst localStorage = createAction(\"contacts/localStorage\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  onHandleFilter,\r\n  localStorage,\r\n};\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//     type: actionTypes.ADD,\r\n//     payload: {\r\n//         contact: {\r\n//             id: uuidv4(),\r\n//             name,\r\n//             number,\r\n//         }\r\n//     }\r\n// })\r\n\r\n// const deleteContact = (id) => ({\r\n//     type: actionTypes.REMOVE,\r\n//     payload: {\r\n//         id,\r\n//     }\r\n// })\r\n\r\n// const onHandleFilter = (filter) => ({\r\n//     type: actionTypes.VALUE,\r\n//     payload: {\r\n//         filter,\r\n//     }\r\n// })\r\n","import React from \"react\";\r\nimport Styles from \"./Insert.module.css\";\r\n\r\nconst Insert = () => {\r\n  return (\r\n    <div className={Styles.NotificationWrapper}>\r\n      {`Insert number, please`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Insert;\r\n","import React from \"react\";\r\nimport Styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ name }) => {\r\n  return (\r\n    <div className={Styles.NotificationWrapper}>\r\n      {`${name} is already in list`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport contactsActions from \"../../redux/tasks/contactsActions\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Insert from \"../insert/Insert\";\r\nimport Notification from \"../notification/Notofication\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    newContact: null,\r\n    showAlert: false,\r\n    showEmpty: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (contacts) {\r\n      this.props.localStorage(JSON.parse(contacts));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    this.setState({ [name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.props.contacts.some((contact) => contact.name === this.state.name)\r\n    ) {\r\n      this.setState({ newContact: this.state.name, showAlert: true });\r\n      setTimeout(() => {\r\n        this.setState({ showAlert: false });\r\n      }, 2500);\r\n    } else if (this.state.name === \"\" || this.state.contact === \"\") {\r\n      this.setState({ showEmpty: true });\r\n      setTimeout(() => {\r\n        this.setState({ showEmpty: false });\r\n      }, 2500);\r\n    } else {\r\n      this.props.addContact({\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n      });\r\n    }\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { newContact, showAlert, showEmpty } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </label>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <CSSTransition\r\n          in={showAlert}\r\n          timeout={250}\r\n          classNames={s}\r\n          unmountOnExit\r\n        >\r\n          <Notification name={newContact} />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={showEmpty}\r\n          timeout={250}\r\n          classNames={s}\r\n          unmountOnExit\r\n        >\r\n          <Insert />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsActions.addContact,\r\n  localStorage: contactsActions.localStorage,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.contactList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./ContactList.module.css\";\r\nimport contactsActions from \"../../redux/tasks/contactsActions\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  const onHandleDelete = (e) => {\r\n    const id = e.target.dataset.id;\r\n    deleteContact(id);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      <TransitionGroup component=\"ul\" className={s.list}>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <CSSTransition key={contact.id} timeout={250} classNames={s}>\r\n              <li key={contact.id} className={s.listItem}>\r\n                <span className={s.name}>{contact.name}</span>:{\" \"}\r\n                <span>{contact.number}</span>\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  data-id={contact.id}\r\n                  onClick={onHandleDelete}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  const { contactList, filter } = state.contacts;\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  const filtredContacts = contactList.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n\r\n  return {\r\n    contacts: filtredContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => {\r\n      dispatch(contactsActions.deleteContact(id));\r\n    },\r\n\r\n    // getFiltredContacts: ({ contacts, filter }) => {\r\n    //     dispatch(contactsActions.getFiltredContacts())\r\n    // }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactFilter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/tasks/contactsActions\";\r\n\r\nconst ContactFilter = ({ value, onHandleFilter }) => {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onHandleFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onHandleFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onHandleFilter: contactsActions.onHandleFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport ContactFilter from \"./contactFilter/ContactFilter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from \"./PhoneBook.module.css\";\r\n// import Notification from \"./notification/Notofication\";\r\n// import Insert from \"./insert/Insert\";\r\n\r\nclass PhoneBook extends Component {\r\n  render() {\r\n    // const { newContact, showAlert, showInsert } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition in={true} appear={true} timeout={500} classNames={s}>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n\r\n        {this.props.contacts.length > 1 && <ContactFilter />}\r\n\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.contactList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PhoneBook);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport PhoneBook from \"./phoneBook/PhoneBook\";\r\n\r\nconst App = () => {\r\n  return <PhoneBook />;\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./contactsActions\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\nconst removeContact = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst contactList = createReducer([], {\r\n  [contactsActions.addContact]: addContact,\r\n  [contactsActions.deleteContact]: removeContact,\r\n  [contactsActions.localStorage]: (_, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.onHandleFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contactList,\r\n  filter,\r\n});\r\n\r\n//  state = {\r\n//     contacts: [],\r\n//     filter: \"\",\r\n//     newContact: null,\r\n//     showAlert: false,\r\n//     showEmpty: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const persistedContacts = localStorage.getItem(\"contacts\");\r\n//     if (persistedContacts) {\r\n//       this.setState({\r\n//         contacts: JSON.parse(persistedContacts),\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.contacts !== this.state.contacts) {\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   addContact = ({ name, number }) => {\r\n//     const { contacts } = this.state;\r\n//     const contact = {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     };\r\n\r\n//     if (contacts.find((el) => el.name.toLowerCase() === name.toLowerCase())) {\r\n//       this.setState({ newContact: contact.name, showAlert: true });\r\n//       setTimeout(\r\n//         () => this.setState({ newContact: null, showAlert: false }),\r\n//         2500\r\n//       );\r\n//       return;\r\n//     }\r\n//     if (!name.length || !number.length) {\r\n//       this.setState({ showInsert: true });\r\n//       setTimeout(() => this.setState({ showInsert: false }), 2500);\r\n//       return;\r\n//     }\r\n//     this.setState((prevState) => {\r\n//       return {\r\n//         contacts: [...prevState.contacts, contact],\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   deleteContact = (e) => {\r\n//     const id = e.target.dataset.id;\r\n//     this.setState({\r\n//       contacts: [...this.state.contacts.filter((contact) => contact.id !== id)],\r\n//     });\r\n//   };\r\n\r\n//   onHandleFilter = (e) => {\r\n//     this.setState({ filter: e.target.value });\r\n//   };\r\n\r\n//   getFiltredContacts = () => {\r\n//     const { contacts, filter } = this.state;\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\r\n//     );\r\n//   };\r\n","import contactsReducers from \"./tasks/contactsReducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./components/redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2HWKQ\",\"label\":\"ContactForm_label__34ydt\",\"input\":\"ContactForm_input__UB3ZJ\",\"button\":\"ContactForm_button__3YeMB\"};"],"sourceRoot":""}